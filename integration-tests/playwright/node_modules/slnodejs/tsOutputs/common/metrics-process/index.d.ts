import { IWatchdog } from '../watchdog';
import { Logger } from '../contracts';
import { IBackendProxy } from '../http/backend-proxy-interface';
import { IEnvironmentDataService } from '../environment-data-service';
import { AgentConfig } from '../config-process/config';
import { IBackgroundProcess, IMetricsStore } from './contracts';
export declare class HttpMetricsProcess implements IBackgroundProcess {
    private agentConfig;
    private sendToServerWatchdog;
    private backendProxy;
    private logger;
    private metricsStore;
    /** should be used for performance metric collection */
    private environmentDataService;
    private isRunning;
    constructor(agentConfig: AgentConfig, sendToServerWatchdog: IWatchdog, backendProxy: IBackendProxy, logger: Logger, metricsStore: IMetricsStore, 
    /** should be used for performance metric collection */
    environmentDataService: IEnvironmentDataService);
    submitMetrics(): Promise<void>;
    protected get shouldSubmitMetrics(): boolean;
    start(): void;
    stop(): Promise<void>;
}
