/// <reference types="node" />
import events = require('events');
import { Watchdog } from '../watchdog';
import { AgentConfig } from './config';
import { Logger } from '../contracts';
import { IBackendProxy } from '../http/backend-proxy-interface';
export declare class ConfigProcess extends events.EventEmitter {
    private cfg;
    private watchdog;
    private backendProxy;
    private logger;
    private initialCfg;
    constructor(cfg: AgentConfig, watchdog: Watchdog, backendProxy: IBackendProxy, logger: Logger);
    protected reloadConfigFromServer(callback?: (err: Error) => void): void;
    private mergeConfigFromServerAndFireEvent;
    getConfiguration(): AgentConfig;
    private initCfg;
    private isRunning;
    start(callback?: (err: Error) => void): void;
    stop(callback: () => void): void;
}
