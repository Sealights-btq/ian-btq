"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolvePath = exports.createAgentConfig = void 0;
const config_1 = require("../common/config-process/config");
const path_1 = require("path");
const fs_1 = require("fs");
function createAgentConfig(cmd, omitLabId = false) {
    const agentConfig = new config_1.AgentConfig();
    const agentConfigKeys = agentConfig.getLowerCaseToKeyMap();
    Object.keys(cmd).forEach(key => {
        const property = agentConfigKeys[key.toLowerCase()];
        if (property) {
            agentConfig[property].value = cmd[key];
        }
    });
    if (omitLabId) {
        agentConfig.labId.value = undefined;
    }
    return agentConfig;
}
exports.createAgentConfig = createAgentConfig;
function resolvePath(name, value) {
    const resolved = (0, path_1.resolve)(value);
    if (!(0, fs_1.existsSync)(resolved)) {
        throw (new Error(`Invalid '${name}'. '${resolved}' doesn't exist`));
    }
    try {
        (0, fs_1.accessSync)(resolved); // Will throws if no access to the file. (https://nodejs.org/api/fs.html#fs_fs_accesssync_path_mode)
        return resolved;
    }
    catch (e) {
        throw (new Error(`Failed to resolve path for ${name}. error ${e}`));
    }
}
exports.resolvePath = resolvePath;
//# sourceMappingURL=utils.js.map