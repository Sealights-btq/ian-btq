"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EnvironmentDataService = void 0;
// TODO: we should be carefull with usage of node specific code in common section
const os = require("os");
const version = process.env['npm_package_version'];
// TODO: move to utils
function clone(o) {
    //if (!o) return o; //Unreachable
    return JSON.parse(JSON.stringify(o));
}
/**
 * The service is used to get environmental data for submission (process id, machine data, etc.)
 */
class EnvironmentDataService {
    constructor(cfg) {
        this.envData = null;
        if (!cfg)
            throw new Error('cfg is required');
        this.envData = {
            machineName: os.hostname(),
            platform: os.platform(),
            processArgv: process.argv,
            os: os.type(),
            osVersion: os.release(),
            arch: os.arch(),
            processId: process.pid,
            ipAddress: clone(os.networkInterfaces()),
            dependencies: clone(process.versions),
            runtime: process.version,
            agentId: null,
            agentType: 'nodejs',
            agentVersion: version,
            lastError: null,
        };
        if (cfg && cfg.environmentName.hasValue) {
            this.envData.environmentName = cfg.environmentName.value;
        }
        if (cfg && cfg.labId.hasValue) {
            this.envData.labId = cfg.labId.value;
        }
        if (cfg && cfg.testStage.hasValue) {
            this.envData.testStage = cfg.testStage.value;
        }
    }
    getEnvDataForSubmission() {
        const returnedEnvData = clone(this.envData);
        returnedEnvData.memory = {
            process: process.memoryUsage(),
            machine: {
                freemem: os.freemem(),
                totalmem: os.totalmem(),
            },
        };
        this.setLastError(null);
        return returnedEnvData;
    }
    setLastError(message) {
        this.envData.lastError = message;
    }
}
exports.EnvironmentDataService = EnvironmentDataService;
//# sourceMappingURL=environment-data-service.js.map