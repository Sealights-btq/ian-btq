"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SourceMapData = void 0;
const source_maps_utils_1 = require("../source-maps-utils");
const source_map_handler_1 = require("../source-map-handler");
const cockpit_notifier_1 = require("../agent-events/cockpit-notifier");
class SourceMapData {
    constructor(logger) {
        this.logger = logger;
        this.pathToConsumer = new Map();
    }
    getSourcePosition(relativePath, absolutePath, start, projectRoot, slMapping) {
        try {
            const sourceMapForModule = this.getSourceMapForModule(absolutePath);
            if (sourceMapForModule) {
                const startPositionArr = [start.line, start.column];
                const handler = new source_map_handler_1.SourceMapHandler(sourceMapForModule, absolutePath, startPositionArr, [], projectRoot, this.logger);
                handler.resolvePaths();
                if (!handler.shouldSkipped) {
                    const relativeSourcePath = slMapping[handler.start.source] || handler.relativePath;
                    return {
                        relativePath: relativeSourcePath,
                        absolutePath: handler.absolutePath,
                        start: { line: handler.start.line, column: handler.start.column }
                    };
                }
            }
        }
        catch (error) {
            const errorMsg = `Error processing source map for module at path: ${absolutePath}. Error: ${error.message}`;
            this.logger.error(errorMsg, error);
            cockpit_notifier_1.CockpitNotifier.sendGenericMessage(errorMsg);
        }
        return null;
    }
    getSourceMapForModule(absolutePath) {
        if (!this.pathToConsumer.get(absolutePath)) {
            this.pathToConsumer.set(absolutePath, source_maps_utils_1.SourceMapsUtils.readSourceMaps(absolutePath));
            this.logger.debug(`Read source maps for file '${absolutePath}'`);
        }
        return this.pathToConsumer.get(absolutePath);
    }
}
exports.SourceMapData = SourceMapData;
//# sourceMappingURL=source-map-data.js.map