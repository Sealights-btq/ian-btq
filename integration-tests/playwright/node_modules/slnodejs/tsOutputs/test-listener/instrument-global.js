"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = require("fs");
const globalExportFile = process.cwd() + '/sl-global-object-export.json';
try {
    const globalProxy = new Proxy(global, {
        set(target, property, value) {
            try {
                const logEntry = `Global object modified: ${String(property)} set to ${typeof value === 'object' ? JSON.stringify(value) : value}`;
                (0, fs_1.appendFileSync)(globalExportFile, logEntry + '\n');
                return Reflect.set(target, property, value);
            }
            catch (error) {
                console.error(`Failed to log property assignment: ${error}`);
            }
        },
        deleteProperty(target, property) {
            try {
                const logEntry = `Global object modified: ${String(property)} deleted`;
                (0, fs_1.appendFileSync)(globalExportFile, logEntry + '\n');
                return Reflect.deleteProperty(target, property);
            }
            catch (error) {
                console.error(`Failed to log property deletion: ${error}`);
            }
        },
        defineProperty(target, property, descriptor) {
            try {
                const logEntry = `Global object modified: ${String(property)} defined with descriptor ${JSON.stringify(descriptor)}`;
                (0, fs_1.appendFileSync)(globalExportFile, logEntry + '\n');
                return Reflect.defineProperty(target, property, descriptor);
            }
            catch (error) {
                console.error(`Failed to log property definition: ${error}`);
            }
        },
    });
    global.global = globalProxy;
}
catch (error) {
    console.error(`Failed to instrument the global object: ${error}`);
}
//# sourceMappingURL=instrument-global.js.map