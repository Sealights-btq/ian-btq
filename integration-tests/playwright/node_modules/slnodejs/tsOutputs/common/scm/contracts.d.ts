import { Logger } from '../contracts';
export interface IMap<T> {
    [key: string]: T;
}
export interface IHandlerParams {
    buildArguments: {
        workspacepath: string;
        sendContributors: boolean;
        sendCommitTitles: boolean;
    };
    commitToIndexMap: IMap<number>;
    emailToIndexMap: IMap<number>;
}
export interface IContributorData {
    contributorEmail: string;
    contributorName: string;
}
export interface IMissingContributor extends IContributorData {
    index: number;
}
export interface IContributors {
    contributors: IContributorData[];
    emailToIndexMap: IMap<number>;
    missingContributor?: IMissingContributor;
}
export interface IRawCommitLog {
    commit: string;
    authorDate: string;
    commiterDate: string;
    title: string;
    authorName: string;
    authorEmail: string;
    commiterName: string;
    commiterEmail: string;
}
export interface ICommitLog {
    commit: string;
    authorDate: number;
    commiterDate: number;
    title: string;
    authorName: string;
    authorEmail: string;
    commiterName: string;
    commiterEmail: string;
}
export interface ICommitLogWithContributorRef {
    commit: string;
    authorDate: number;
    commiterDate: number;
    title: string;
    contributorIndex: number;
    missingContributor?: IMissingContributor;
}
export interface IBranchHistory {
    commitHistory: string[];
    commitLog: Array<ICommitLog | ICommitLogWithContributorRef>;
    commitToIndexMap: IMap<string>;
    missingContributors?: IMissingContributor[];
}
export interface IGitDiffFileStatus {
    path: string;
    op: 'added' | 'deleted' | 'modified' | 'renamed' | 'renamed-modified';
}
export interface IScm {
    detectCommitVersion(handlerParams: IHandlerParams, logger: Logger): Promise<string>;
    getBranchHistory(handlerParams: IHandlerParams, logger: Logger): Promise<IBranchHistory>;
    getContributors(handlerParams: IHandlerParams, logger: Logger): Promise<IContributors>;
    getCommitsPerFile(handlerParams: IHandlerParams, logger: Logger): Promise<IMap<number[]>>;
    getRepositoryUrl(handlerParams: IHandlerParams, logger: Logger): Promise<string>;
    getRootDirectory(handlerParams: IHandlerParams, logger: Logger): Promise<string>;
    getFiles(handlerParams: IHandlerParams, logger: Logger): Promise<string[]>;
    getCommitOnlyHistory(historyLength: number, handlerParams: IHandlerParams, logger: Logger): Promise<string[]>;
    getGitDiffs(refCommit: string, handlerParams: IHandlerParams, logger: Logger): Promise<IGitDiffFileStatus[]>;
    getOpenGitBranches(handlerParams: IHandlerParams, logger: Logger): Promise<string[]>;
    getCurrentGitBranch(handlerParams: IHandlerParams, logger: Logger): Promise<string>;
    getGitSubmodules(handlerParams: IHandlerParams, logger: Logger): Promise<string[]>;
}
